[tox]
envlist = py{27,35,36}-{django111}-{coverage,install},flake,pylint
skipsdist = True
setenv = PIP_CONFIG_FILE=.pip.conf
whitelist_externals = 
    rm
    bash

[testenv]
passenv = DJANGO_LOG_LEVEL
whitelist_externals = 
    rm
    bash
    echo
commands =
  install: make compile PY=python
  install: bash -c "pip install -U dist/polemarch-$(python -c 'import polemarch; print(polemarch.__version__)').tar.gz"
  install: pip freeze
  bash -c 'echo -ne "try: from yaml import CLoader; print(\"YAML with CLoader\")\nexcept: print(\"YAML without CLoader\")\n" | python'
  coverage debug sys
  coverage erase
  coverage run -m polemarch test -v 2 --failfast --parallel=4 {posargs}
  coverage combine
  coverage report
  rm -rf .eggs build polemarch.egg-info dist
  install: pip uninstall polemarch -y
deps =
    coverage: -rrequirements.txt
    install: cython>=0.28
    -rrequirements-doc.txt
    -rrequirements-git.txt
    -rrequirements-test.txt

[testenv:pep]
deps =
    pep8
commands = 
  pep8

[testenv:flake]
deps =
    flake8
    -rrequirements.txt
    -rrequirements-git.txt
commands = 
  flake8 --config=.pep8 polemarch

[testenv:pylint]
basepython = python2.7
deps =
    pylint==1.6.5
    pylint-django==0.7.2
    pylint-plugin-utils==0.2.6
    -rrequirements.txt
    -rrequirements-git.txt
commands = 
  pylint --rcfile=./.pylintrc {posargs} polemarch

[testenv:selenium]
passenv = DJANGO_LOG_LEVEL
changedir = ./
commands =
    coverage debug sys
    coverage erase
    coverage run -m polemarch test -v 2 --failfast --noinput selenium_tests
    coverage combine
    coverage report
deps =
    cython>=0.28,<0.30
    selenium==3.14.1
    -e .
    -rrequirements-doc.txt
    -rrequirements-git.txt
    -rrequirements-test.txt

[testenv:build]
basepython = python2.7
whitelist_externals =
    make
commands =
  make compile PY=python {posargs}
deps =
  cython>=0.28,<1.0

[testenv:builddoc]
changedir = ./doc/
whitelist_externals =
    cp
    make
commands =
    make html
    # cp -rv _build/html ../public
deps =
  -rrequirements-doc.txt

[testenv:rpm]
toxworkdir = ./
passenv = *
basepython = python2.7
whitelist_externals =
    make
commands =
  make rpm PY=python {posargs}
deps =
  cython>=0.28,<1.0
  virtualenv==16.0
  venvctrl

[testenv:deb]
toxworkdir = ./
passenv = *
basepython = python2.7
whitelist_externals =
    make
commands =
  make deb PY=python {posargs}
deps =
  cython>=0.28,<1.0
  virtualenv==16.0
  venvctrl

[testenv:release]
toxworkdir = ./
passenv = *
whitelist_externals =
    mkdir
    ls
commands =
    mkdir -p dist
    ls -la dist
    python setup.py githubrelease
deps =
    githubrelease
